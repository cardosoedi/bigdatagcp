version: '3.7'
services:
  mysql:
    image: mysql:5.7
    restart: always
    networks:
      - lake_network
    hostname: mysql.lake_network
    volumes:
      - ./mysql/my.cnf:/etc/mysql/mysql.cnf
    environment:
      - "MYSQL_ROOT_PASSWORD=airflow"
      - "MYSQL_DATABASE=airflow"
      - "MYSQL_USER=airflow"
      - "MYSQL_PASSWORD=airflow"
    ports:
      - "3306:3306"

  airflow_webserver:
    image: airflow
    restart: always
    build:
        context: airflow
        dockerfile: Dockerfile
    volumes:
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./airflow/dags:/opt/airflow/dags
    ports:
        - "8081:8080"
    networks:
      - lake_network
    hostname: airflow_webserver.lake_network
    depends_on:
      - mysql
    command: webserver

  airflow_scheduler:
    image: airflow
    restart: always
    networks:
      - lake_network
    volumes:
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./airflow/dags:/opt/airflow/dags
    hostname: airflow_scheduler.lake_network
    depends_on:
      - airflow_webserver
    command: scheduler

  redis:
    image: redis:5.0.6
    networks:
      - lake_network
    hostname: redis.lake_network
    ports:
      - "6379:6379"

  prestosql:
    image: prestosql
    build:
      context: prestosql
      dockerfile: Dockerfile
    networks:
      - lake_network
    hostname: prestosql.lake_network
    ports:
      - "8080:8080"
    volumes:
      - ./prestosql/etc:/usr/lib/presto/etc
    depends_on:
      - redis

  metabase:
    image: metabase/metabase
    networks:
      - lake_network
    hostname: metabase.lake_network
    ports:
      - "3000:3000"
    depends_on:
      - prestosql

#  kafka:
#    image: kafka
#    build:
#      context: kafka
#      dockerfile: Dockerfile
#    restart: always
#    volumes:
#      - "./kafka/server.properties:/opt/kafka/config/server.properties"
#    networks: ["lake_network"]
#    hostname: kafka.lake_network
#    ports:
#      - "2181:2181"
#      - "9092:9092"
#    command: kafka_broker

networks:
  lake_network:
    driver: bridge
    name: lake_network